function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),o=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),o.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:0}):n.scrollWrapper.animate({left:-400})})},Auth.prototype.listenSigninEvent=function(){var i=this,t=$(".signin-group"),o=t.find("input[name='telephone']"),r=t.find("input[name='password']"),s=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=o.val(),n=r.val(),e=s.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){if(200==t.code)i.hideEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var o=n[e].message;window.messageBox.show(o)}}},fail:function(t){console.log(t)}})})},$(function(){var t=new FrontBase;(new Auth).run(),t.run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyb250X2Jhc2UuanMiXSwibmFtZXMiOlsiRnJvbnRCYXNlIiwiQXV0aCIsInRoaXMiLCJtYXNrV3JhcHBlciIsIiQiLCJzY3JvbGxXcmFwcGVyIiwicHJvdG90eXBlIiwicnVuIiwibGlzdGVuQXV0aEJveEhvdmVyIiwiYXV0aEJveCIsInVzZXJNb3JlQm94IiwiaG92ZXIiLCJzaG93IiwiaGlkZSIsInNlbGYiLCJsaXN0ZW5TaG93SGlkZUV2ZW50IiwibGlzdGVuU3dpdGNoRXZlbnQiLCJsaXN0ZW5TaWduaW5FdmVudCIsInNob3dFdmVudCIsImhpZGVFdmVudCIsInNpZ25pbkJ0biIsInNpZ251cEJ0biIsImNsb3NlQnRuIiwiY2xpY2siLCJjc3MiLCJsZWZ0IiwiY3VycmVudExlZnQiLCJwYXJzZUludCIsImFuaW1hdGUiLCJzaWduaW5Hcm91cCIsInRlbGVwaG9uZUlucHV0IiwiZmluZCIsInBhc3N3b3JkSW5wdXQiLCJyZW1lbWJlcklucHV0IiwidGVsZXBob25lIiwidmFsIiwicGFzc3dvcmQiLCJyZW1lbWJlciIsInByb3AiLCJ4ZnphamF4IiwicG9zdCIsInVybCIsImRhdGEiLCJzdWNjZXNzIiwicmVzdWx0IiwiY29kZSIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwibWVzc2FnZU9iamVjdCIsIm1lc3NhZ2UiLCJjb25zdHJ1Y3RvciIsIlN0cmluZyIsIm1lc3NhZ2VCb3giLCJrZXkiLCJmYWlsIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiZnJvbnRCYXNlIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxhQW9CVCxTQUFTQyxPQUNNQyxLQUNOQyxZQUFjQyxFQUFFLGlCQURWRixLQUVORyxjQUFnQkQsRUFBRSxtQkFuQjNCSixVQUFVTSxVQUFVQyxJQUFNLFdBQ1hMLEtBQ05NLHNCQUVUUixVQUFVTSxVQUFVRSxtQkFBcUIsV0FDckMsSUFBSUMsRUFBVUwsRUFBRSxhQUNaTSxFQUFjTixFQUFFLGtCQUNwQkssRUFBUUUsTUFBTSxXQUNWRCxFQUFZRSxRQUNiLFdBQ0NGLEVBQVlHLFVBYXBCWixLQUFLSyxVQUFVQyxJQUFNLFdBQ2pCLElBQUlPLEVBQU9aLEtBQ1hZLEVBQUtDLHNCQUNMRCxFQUFLRSxvQkFDTEYsRUFBS0cscUJBRVRoQixLQUFLSyxVQUFVWSxVQUFZLFdBQ1poQixLQUNOQyxZQUFZUyxRQUVyQlgsS0FBS0ssVUFBVWEsVUFBWSxXQUNaakIsS0FDTkMsWUFBWVUsUUFFckJaLEtBQUtLLFVBQVVTLG9CQUFzQixXQUNqQyxJQUFJRCxFQUFPWixLQUNQa0IsRUFBWWhCLEVBQUUsZUFDZGlCLEVBQVlqQixFQUFFLGVBQ2RrQixFQUFXbEIsRUFBRSxjQUVqQmdCLEVBQVVHLE1BQU0sV0FDWlQsRUFBS0ksWUFDTEosRUFBS1QsY0FBY21CLElBQUksQ0FBQ0MsS0FBUSxNQUVwQ0osRUFBVUUsTUFBTSxXQUNaVCxFQUFLSSxZQUNMSixFQUFLVCxjQUFjbUIsSUFBSSxDQUFDQyxNQUFTLFFBRXJDSCxFQUFTQyxNQUFNLFdBQ1hULEVBQUtLLGVBR2JsQixLQUFLSyxVQUFVVSxrQkFBb0IsV0FDL0IsSUFBSUYsRUFBT1osS0FDSUUsRUFBRSxXQUNSbUIsTUFBTSxXQUVYLElBQUlHLEVBQWNaLEVBQUtULGNBQWNtQixJQUFJLFNBQ3pDRSxFQUFjQyxTQUFTRCxJQUNMLEVBQ2RaLEVBQUtULGNBQWN1QixRQUFRLENBQUNILEtBQVEsSUFFcENYLEVBQUtULGNBQWN1QixRQUFRLENBQUNILE1BQVMsU0FJakR4QixLQUFLSyxVQUFVVyxrQkFBb0IsV0FDL0IsSUFBSUgsRUFBT1osS0FDUDJCLEVBQWN6QixFQUFFLGlCQUNoQjBCLEVBQWlCRCxFQUFZRSxLQUFLLDJCQUNsQ0MsRUFBZ0JILEVBQVlFLEtBQUssMEJBQ2pDRSxFQUFnQkosRUFBWUUsS0FBSywwQkFDckJGLEVBQVlFLEtBQUssZUFFdkJSLE1BQU0sV0FDWixJQUFJVyxFQUFZSixFQUFlSyxNQUMzQkMsRUFBV0osRUFBY0csTUFDekJFLEVBQVdKLEVBQWNLLEtBQUssV0FDbENDLFFBQVFDLEtBQUssQ0FDVEMsSUFBTyxrQkFDUEMsS0FBUSxDQUNKUixVQUFhQSxFQUNiRSxTQUFZQSxFQUNaQyxTQUFZQSxFQUFXLEVBQUksR0FFL0JNLFFBQVcsU0FBVUMsR0FDakIsR0FBbUIsS0FBZkEsRUFBT0MsS0FDUC9CLEVBQUtLLFlBQ0wyQixPQUFPQyxTQUFTQyxhQUNmLENBQ0QsSUFBSUMsRUFBZ0JMLEVBQU9NLFFBQzNCLEdBQTJCLGlCQUFqQkQsR0FBNEJBLEVBQWNFLGFBQWFDLE9BQzdETixPQUFPTyxXQUFXekMsS0FBS3FDLFFBRXZCLElBQUssSUFBSUssS0FBT0wsRUFBYyxDQUMxQixJQUNJQyxFQURXRCxFQUFjSyxHQUNHLFFBQ2pDUixPQUFPTyxXQUFXekMsS0FBS3NDLE1BS3RDSyxLQUFRLFNBQVVDLEdBQ2RDLFFBQVFDLElBQUlGLFNBTTVCcEQsRUFBRSxXQUNFLElBQUl1RCxFQUFZLElBQUkzRCxXQUNULElBQUlDLE1BQ1ZNLE1BQ0xvRCxFQUFVcEQiLCJmaWxlIjoiZnJvbnRfYmFzZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBGcm9udEJhc2UoKSB7XG5cbn1cblxuRnJvbnRCYXNlLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYubGlzdGVuQXV0aEJveEhvdmVyKCk7XG59O1xuRnJvbnRCYXNlLnByb3RvdHlwZS5saXN0ZW5BdXRoQm94SG92ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGF1dGhCb3ggPSAkKCcuYXV0aC1ib3gnKTtcbiAgICB2YXIgdXNlck1vcmVCb3ggPSAkKCcudXNlci1tb3JlLWJveCcpO1xuICAgIGF1dGhCb3guaG92ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICB1c2VyTW9yZUJveC5zaG93KCk7XG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICB1c2VyTW9yZUJveC5oaWRlKCk7XG4gICAgfSk7XG59O1xuLy/ngrnlh7vnmbvlvZXvvIzlvLnlh7rmqKHmgIHlr7nor53moYZcblxuLy/nsbtcbmZ1bmN0aW9uIEF1dGgoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYubWFza1dyYXBwZXIgPSAkKCcubWFzay13cmFwcGVyJyk7XG4gICAgc2VsZi5zY3JvbGxXcmFwcGVyID0gJCgnLnNjcm9sbC13cmFwcGVyJyk7XG59XG5cbi8v5omn6KGM57G7XG5BdXRoLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYubGlzdGVuU2hvd0hpZGVFdmVudCgpO1xuICAgIHNlbGYubGlzdGVuU3dpdGNoRXZlbnQoKTtcbiAgICBzZWxmLmxpc3RlblNpZ25pbkV2ZW50KCk7XG59O1xuQXV0aC5wcm90b3R5cGUuc2hvd0V2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBzZWxmLm1hc2tXcmFwcGVyLnNob3coKTtcbn07XG5BdXRoLnByb3RvdHlwZS5oaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYubWFza1dyYXBwZXIuaGlkZSgpO1xufTtcbkF1dGgucHJvdG90eXBlLmxpc3RlblNob3dIaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBzaWduaW5CdG4gPSAkKCcuc2lnbmluLWJ0bicpO1xuICAgIHZhciBzaWdudXBCdG4gPSAkKCcuc2lnbnVwLWJ0bicpO1xuICAgIHZhciBjbG9zZUJ0biA9ICQoJy5jbG9zZS1idG4nKTtcblxuICAgIHNpZ25pbkJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYuc2hvd0V2ZW50KCk7XG4gICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5jc3MoeydsZWZ0JzogMH0pO1xuICAgIH0pO1xuICAgIHNpZ251cEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYuc2hvd0V2ZW50KCk7XG4gICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5jc3MoeydsZWZ0JzogLTQwMH0pO1xuICAgIH0pO1xuICAgIGNsb3NlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2VsZi5oaWRlRXZlbnQoKTtcbiAgICB9KTtcbn07XG5BdXRoLnByb3RvdHlwZS5saXN0ZW5Td2l0Y2hFdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIHN3aXRjaGVyID0gJCgnLnN3aXRjaCcpO1xuICAgIHN3aXRjaGVyLmNsaWNrKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICB2YXIgY3VycmVudExlZnQgPSBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKCdsZWZ0JylcbiAgICAgICAgY3VycmVudExlZnQgPSBwYXJzZUludChjdXJyZW50TGVmdCk7XG4gICAgICAgIGlmIChjdXJyZW50TGVmdCA8IDApIHtcbiAgICAgICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5hbmltYXRlKHsnbGVmdCc6IDB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2VsZi5zY3JvbGxXcmFwcGVyLmFuaW1hdGUoeydsZWZ0JzogLTQwMH0pXG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5BdXRoLnByb3RvdHlwZS5saXN0ZW5TaWduaW5FdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIHNpZ25pbkdyb3VwID0gJCgnLnNpZ25pbi1ncm91cCcpO1xuICAgIHZhciB0ZWxlcGhvbmVJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSd0ZWxlcGhvbmUnXVwiKTtcbiAgICB2YXIgcGFzc3dvcmRJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdwYXNzd29yZCddXCIpO1xuICAgIHZhciByZW1lbWJlcklucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3JlbWVtYmVyJ11cIik7XG4gICAgdmFyIHN1Ym1pdEJ0biA9IHNpZ25pbkdyb3VwLmZpbmQoJy5zdWJtaXQtYnRuJyk7XG5cbiAgICBzdWJtaXRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdGVsZXBob25lID0gdGVsZXBob25lSW5wdXQudmFsKCk7XG4gICAgICAgIHZhciBwYXNzd29yZCA9IHBhc3N3b3JkSW5wdXQudmFsKCk7XG4gICAgICAgIHZhciByZW1lbWJlciA9IHJlbWVtYmVySW5wdXQucHJvcCgnY2hlY2tlZCcpO1xuICAgICAgICB4ZnphamF4LnBvc3Qoe1xuICAgICAgICAgICAgJ3VybCc6ICcvYWNjb3VudC9sb2dpbi8nLFxuICAgICAgICAgICAgJ2RhdGEnOiB7XG4gICAgICAgICAgICAgICAgJ3RlbGVwaG9uZSc6IHRlbGVwaG9uZSxcbiAgICAgICAgICAgICAgICAncGFzc3dvcmQnOiBwYXNzd29yZCxcbiAgICAgICAgICAgICAgICAncmVtZW1iZXInOiByZW1lbWJlciA/IDEgOiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmhpZGVFdmVudCgpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlT2JqZWN0ID0gcmVzdWx0Lm1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBtZXNzYWdlT2JqZWN0ID09ICdzdHJpbmcnIHx8bWVzc2FnZU9iamVjdC5jb25zdHJ1Y3Rvcj09U3RyaW5nKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3cobWVzc2FnZU9iamVjdCk7XG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIG1lc3NhZ2VPYmplY3Qpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlcyA9IG1lc3NhZ2VPYmplY3Rba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IG1lc3NhZ2VzWydtZXNzYWdlJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93KG1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2ZhaWwnOiBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KTtcbn07XG5cbiQoZnVuY3Rpb24gKCkge1xuICAgIHZhciBmcm9udEJhc2UgPSBuZXcgRnJvbnRCYXNlKCk7XG4gICAgdmFyIGF1dGggPSBuZXcgQXV0aCgpO1xuICAgIGF1dGgucnVuKCk7XG4gICAgZnJvbnRCYXNlLnJ1bigpO1xufSk7Il19
